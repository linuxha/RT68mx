 NAM RTIO2.1F
 OPT NOG,PAG
 SPC3
* INPUT OUTPUT ROUTINES FOR A/BASIC V2.1F
*
* MINIFLEX DISK VERSION
*
* (RUN TIME ROUTINES)
*
* 4/10/78 KEN KAPLAN
* 9/25/78 LARRY CRANE
 SPC2
* RUN TIME STORAGE
 ORG $0012
ERRADR RMB2
ERRTYP RMB1
 ORG $20
XSAVE RMB 2
BUFPTR RMB 2
SAVZON RMB 2
ZONE RMB 1
STRPTR RMB 2
STRSAV RMB 2
 SPC2
* RT/68 REFERENCES
OUTCH EQU $E1D1
INCH EQU $E1AC
 SPC2
* RUN TIME OUTPUT SUBROUTINE IMAGES
 ORG $1D00
 SPC1
ZLDX1 EQU *-4
 SPC2
* PUT SPACE IN I/O BUFFER
ZOUTS LDAA #$20
 SPC1
* PUT CHAR IN I/O BUFFER
ZOUT STX XSAVE SAVE XR
 LDX BUFPTR GET CURRENT POSITION POINTER
 STAA 0,X PUT BYTE IN BUFF
 INX MOVE CURRENT POSITION
 CLR 0,X MARK END OF BUFFER
 STX BUFPTR SAVE CURRENT POSITION
 INC ZONE BUMP ZONE COUNT
 LDX XSAVE RESTORE XR
 RTS
 SPC2
*INITIALIZE I/O
ZINZIO BSR ZLDX1 GET I/O BUFF POINTER
 STX BUFPTR
 RTS
 SPC2
*SKIP ZONE; ENTER AT 'ZSKPZ'
ZSKPZ2 BSR ZOUTS PUT SPACE IN BUFF
ZSKPZ LDAA ZONE (ZONE MOD 8) = 1 ?
 ANDA #7
 CMPA #1
 BNE ZSKPZ2 BRANCH IF NOT
 RTS
 SPC2
* PRINT BUFFER - NO CR/LF
ZENDBN BSR ZLDX1 GET I/O BUFF POINTER
ZEBN2 LDAA 0,X GET NEXT BYTE
 BEQ RETURN BRANCH IF END OF BUFFER
 BSR PRCHR PRINT BYTE
 INX MOVE BUFF POINTER
 BRA ZEBN2
 SPC2
* TAB FUNCTION; ENTER AT 'ZTAB'
ZTAB2 BSR ZOUTS PUT SPACE IN BUF
ZTAB CMPB ZONE
 BHI ZTAB2 BRANCH IF NOT THERE YET
RETURN RTS
 SPC2
ZGOUT BRA ZOUT
PRCHR JMP OUTCH
 SPC2
* PRINT BUFFER + CR/LF
ZENDB BSR ZENDBN
ZCRLF LDAA #1 RESET ZONE COUNT
 STAA ZONE
 BSR ZCRLF2
 FCB $D,$A,0,0,0,0,4
ZCRLF2 TSX GET STRING ADDR
 LDX 0,X
 INS CLEAN UP STACK
 INS
PDATA LDAA 0,X
 CMPA #4
 BEQ RETURN
 BSR PRCHR
 INX
 BRA PDATA
 SPC3
* PRINT LITERAL (DISK)
ZPRLTD BSR ZONSAV
 BSR ZPRLIT
 BRA ZDSK
 SPC2
* PRINT STRING (DISK)
ZPSTRD BSR ZONSAV
 BSR ZPRS
ZDSK LDAA #', USE COMMA SEPARATOR
 BSR ZGOUT
 LDAA SAVZON
 STAA ZONE
 RTS
 SPC1
ZONSAV PSHA
 LDAA ZONE
 STAA SAVZON
 PULA
 RTS
 SPC2
* PRINT DIGIT
ZPRSUB PSHA
 LDAA 0,X
 BNE ZPRS2
 TST 1,X
 BEQ ZPRS3
ZPRS2 ORAA #$30
 BSR ZGOUT
 INC 1,X
ZPRS3 CLR 0,X
 PULA
 RTS
 SPC2
* PRINT LITERAL
ZPRLIT LDAB #128
* PRINT STRING
ZPRS LDAA 0,X
 BEQ ZPRST2
 BSR ZGOUT
 INX
 DECB
 BNE ZPRS
ZPRST2 RTS
 SPC2
* PRINT NUMBER (DISK)
ZPNUMD BSR ZONSAV
 BSR ZPRN
 BRA ZDSK
 SPC2
* PRINT NUMBER
ZPRN TSTA
 BPL ZPRN2
 PSHA
 LDAA #'-
 BSR ZGOUT
 PULA
 NEGA
 NEGB
 SBCA #0
ZPRN2 DES
 DES
 TSX
 CLR 0,X
 CLR 1,X
ZPRN3 SUBB #$10
 SBCA #$27
 BCS ZPRN4
 INC 0,X
 BRA ZPRN3
ZPRN4 ADDB #$10
 ADCA #$27
 BSR ZPRSUB
ZPRN5 SUBB #$E8
 SBCA #$3
 BCS ZPRN6
 INC 0,X
 BRA ZPRN5
ZPRN6 ADDB #$E8
 ADCA #3
 BSR ZPRSUB
ZPRN7 SUBB #$64
 SBCA #0
 BCS ZPRN8
 INC 0,X
 BRA ZPRN7
ZPRN8 ADDB #$64
 BSR ZPRSUB
ZPRN9 SUBB #10
 BCS ZPRN10
 INC 0,X
 BRA ZPRN9
ZPRN10 ADDB #10
 BSR ZPRSUB
 STAB 0,X
 INC 1,X
 BSR ZPRSUB
 INS
 INS
 RTS
 SPC5
* RUN TIME INPUT SUBROUTINE IMAGES
 SPC1
 ORG $1DF0
INPUT EQU *
 SPC1
* INPUT RESET BUFPTR
ZINRES LDX #0 LOADER WILL CHANGE TO
 STX BUFPTR POINTER TO I/O BUFF
 RTS
 SPC1
* INPUT NUMBER FROM BUFFER
ZRNUM CLRA
 PSHA SIGN
 PSHA LO
 PSHA HI
 PSHA TEMP
 LDAA #5
 PSHA DIGIT COUNT
 TSX
* DELETE LEADING SPACES
ZRNUM1 BSR ZNCHR
 BCC ZRNUM4
 CMPA #$20
 BEQ ZRNUM1
 CMPA #'- NEG SIGN?
 BNE DIGENT
 INC 4,X BUMP SIGN FLAG
ZRNUM2 BSR ZNCHR
 BCC ZRNUM4
 CMPA #$20
 BEQ ZRNUM4
 TST 0,X
 BEQ ZNMERR TO MANY DIGITS
* CHECK DIGIT
DIGENT SUBA #$30
 BCS ZNMERR
 CMPA #9
 BHI ZNMERR
* MULT TEMP*10 AND ADD DIGIT
 STAA 1,X
 LDAA 2,X
 LDAB 3,X
 ASLB
 ROLA
 STAA 2,X
 STAB 3,X
 ASLB
 ROLA
 ASLB
 ROLA
 BCS ZNMERR OVERFLOW
 ADDB 3,X
 ADCA 2,X
 BCS ZNMERR
 ADDB 1,X
 ADCA #0
 BCS ZNMERR
 STAA 2,X
 STAB 3,X
 DEC 0,X
 BRA ZRNUM2
* NORMAL CLEAN-UP
ZRNUM4 INS
 INS
 PULA
 PULB
 TST 4,X CHECK SIGN FLAG
 BEQ ZRNUM5
 NEGA MAKE NEG
 NEGB
 SBCA #0
ZRNUM5 INS
 RTS
*ERROR CLEAN-UP
ZNMERR LDAA #34
 STAA ERRTYP
 LDX ERRADR
 BEQ NOTRAP
 JMP 0,X
NOTRAP INS
 INS
 INS
 INS
 INS
 CLRB
 CLRA
 RTS
 SPC2
* MOVE STRING FROM BUFFER
ZRDSTR BSR ZNCHR
 BCS ZRSTR3
 CLR 0,X
 RTS
ZRSTR3 STAA 0,X
 INX
 DECB
 BNE ZRDSTR
 RTS
 SPC2
* ROUTINE TO GET CHAR FROM BUFFER
ZNCHR STX XSAVE
 LDX BUFPTR
 LDAA 0,X
 BEQ ZNCHR1
 CMPA #',
 BEQ ZNCHR1
 CMPA #$D
 BEQ ZNCHR2
 BSR ZNCHR1
 SEC
 RTS
ZNCHR1 INX BUMP PTR
ZNCHR2 STX BUFPTR
 LDX XSAVE
 CLC
 RTS
 SPC2
OUTSTR LDAA 0,X
 CMPA #4
 BNE OUTST2
 RTS
OUTST2 BSR CHROUT
 INX
 BRA OUTSTR
 SPC2
CHROUT JMP OUTCH
 SPC2
* READ TERMINAL INPUT LINE
ZRDLIN LDAA #'?
 BSR CHROUT
 LDAA #$20 PRINT SPACE
 BSR CHROUT
* READ INPUT BUFFER
ZRDBUF BSR ZLDX2
 LDAB #128
ZRBUF2 JSR INCH
 CMPA #$F BACKSPACE
 BNE CHKDEL
 CMPB #128
 BEQ LINKIL
 INCB
 DEX
 LDAA 0,X
 BSR CHROUT
 BRA ZRBUF2
CHKDEL CMPA #$18
 BNE ZRBUF4
* DELETE LINE
LINKIL BSR ZRBUF3
 FCC / *DEL*/
 FCB 4
ZRBUF3 TSX
 LDX 0,X
 INS
 INS
 BSR OUTSTR
 BSR ZRLIN3
 BRA ZRDBUF
ZRBUF4 STAA 0,X
 CMPA #$D
 BNE ZRBUF5
 CLR 0,X
 INX
 STX BUFPTR
ZRLIN3 LDAA #1
 STAA ZONE
 BSR ZRLIN9
 FCB $D,$A,0,0,0,0,4
ZRLIN9 TSX
 LDX 0,X
 INS
 INS
 BRA OUTSTR
ZRBUF5 TSTB
 BEQ ZRBUF2
 INX
 DECB
 BRA ZRBUF2
 SPC3
ZLDX2 EQU *
 END
