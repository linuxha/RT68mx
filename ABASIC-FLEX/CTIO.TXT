 NAM CTIO2.1F
 OPT NOG,PAG
 SPC2
* INPUT OUTPUT ROUTINES FOR A/BASIC V2.1F
*
* MINIFLEX DISK VERSION
*
* (COMPILE TIME ROUTINES)
*
* 4/7/78 KEN KAPLAN
* 9/20/78 LARRY CRANE
 SPC2
* BUFFER AND POINTER DEFINITIONS
BUFPTR EQU $0033 SOURCE BUFFER PTR
LINBUF EQU $2388 SOURCE INPUT BUFFER
OUTBUF EQU $23D9 LISTING OUTPUT BUFFER
OBJADR EQU $009B OBJECT BUFFER
 SPC2
* TEMP STORAGE DEFINITIONS
 ORG $00F8
XTMP RMB2 XR TEMP
OBJFLG RMB1 FLAG FOR OBJECT FILE USED
 SPC2
* FLEX REFERENCES
REFLEX EQU $B403
FLEX EQU $B406
WARMS EQU $AD03
INCH EQU $AD15
OUTCH EQU $AD18
PCRLF EQU $AD24
GETFIL EQU $AD2D
NXTCHR EQU $AD27
RPTERR EQU $AD3F
SETEXT EQU $AD33
WRKDRV EQU $AC0C
PREVCH EQU $AC11
 SPC1
OPNR EQU 1
OPNW EQU 2
CLSF EQU 4
RWDF EQU 5
 SPC2
* FILE CONTROL BLOCK ASSIGNMENTS
 ORG $A880
SRCFCB RMB 320 SOURCE FCB
OBJFCB RMB 320 OBJECT FCB
 SPC2
* COMPILER JUMP TABLE OVERLAY
 ORG $0103
SRCRD JMP SRCREC
SRCREW JMP REWIND REWIND SOURCE FILE
OPENIO JMP INIT INITIALIZE I/O SYSTEM
OBJWRT JMP OBJREC WRITE OBJECT RECORD
LSTWRT JMP LSTREC WRITE LISTING RECORD
CLOSIO JMP CLNUP CLOSE FILE(S), RETURN TO DOS
 SPC3
 ORG $1C00
* INITIALIZE I/O SYSTEM
INIT CLR OBJFLG
 LDAA PREVCH GET CHAR FOR LINE BUF
 CMPA #$D EOL?
 BEQ CLNUP1
 LDX #SRCFCB
 LDAA WRKDRV
 STAA 3,X
 JSR GETFIL GET SOURCE FILE SPEC
 BCS SETERR BRA IF BAD
 LDAA #1
 JSR SETEXT
 LDAA PREVCH
 CMPA #$D END OF LINE?
 BEQ OPENFL NO OBJECT
 LDX #OBJFCB
 LDAA WRKDRV
 STAA 3,X
 JSR GETFIL GET OBJ FILE SPEC
 BCS SETERR BRA IF BAD
 CLRA
 JSR SETEXT
 INC OBJFLG WE HAVE OBJ FILE
 SPC1
* OPEN FILES
OPENFL LDAB #OPNR CODE FOR OPEN READ
 BSR SRCOPR OPEN SOURCE FILE
 LDAA OBJFLG 
 BEQ RETURN BRA IF NO OBJ
 LDAB #OPNW CODE FOR OPEN WRITE
 BSR OBJOPR CREATE OBJ FILE
 LDAA #$FF
 STAA OBJFCB+59
RETURN RTS
 SPC2
* FILE INTERFACE ROUTINES
SRCOPR LDX #SRCFCB SOURCE OPERATION
 BRA FILEOP
 SPC1
OBJOPR LDX #OBJFCB OBJECT OPERATION
 SPC1
FILEOP STAB 0,X PUT FUNC. CODE IN FCB
 JSR FLEX CALL DOS
 BEQ RETURN RETURN IF NO ERR
 SPC1
* ERROR ENTRY POINT - PRINT ERROR MESSAGE AND ABORT
SETERR JSR RPTERR PRINT ERR MESS.
 BRA CLNUP0
 SPC1
* RETURN TO DOS-68
CLNUP LDAA OBJFLG WRITING OBJECT?
 BEQ CLNUP0 BRANCH IF NOT
 LDAA #$16 TRANS. ADDR. RECORD
 BSR OBJBYT
 LDAA #$10 TRANS. ADDR. = $1000
 BSR OBJBYT
 LDAA #$00
 BSR OBJBYT
CLNUP0 JSR REFLEX CLOSE FILES
CLNUP1 JMP WARMS
 SPC2
* REWIND SOURCE FILE
REWIND LDAB #RWDF CLOSE READ CODE
 BRA SRCOPR CLOSE SOURCE FILE
 SPC2
* READ A SOURCE RECORD (LINE)
* (CR) = END-OF-RECORD
* $1A = END-OF-FILE
* RETURNS WITH CARRY BIT CLEAR AT EOF
SRCREC LDX #LINBUF GET BUFFER ADDR
SRCRD1 STX BUFPTR SAVE PTR
 CLRB READ BYTE CODE
 BSR SRCOPR READ SRC BYTE
 CMPA #$1A EOF?
 BNE SRCRD2
 CLC
 RTS EOF RETURN
SRCRD2 LDX BUFPTR RESTORE PTR
 STAA 0,X PUT BYTE IN BUF
 CPX #LINBUF+79 IF BUF FULL?
 BEQ SRCRD3 IF SO DON'T BUMP PTR
 INX
SRCRD3 CMPA #$D
 BNE SRCRD1 BRA IF NOT E-O-R
 SEC
 RTS NOT EOF RETURN
 SPC2
*ROUTINE TO PRINT LISTING RECORD
LSTREC LDX #OUTBUF GET ADDR OF BUFFER
LWRT2 LDAA 0,X
 CMPA #$D END OF LINE?
 BEQ LWRT3
 BSR PRCHR PRINT IT
 INX
 BRA LWRT2
LWRT3 JMP PCRLF
 SPC1
PRCHR JMP OUTCH OUTPUT CHAR SUBR
 SPC2
* WRITE OBJECT FILE (BINARY FORMAT)
OBJBYT PSHB
 STX XTMP
 CLRB
 BSR OBJOPR
 PULB
 LDX XTMP
OBJRET RTS
 SPC1
OBJREC LDAA OBJFLG FILE ACTIVE?
 BEQ OBJRET
 LDAA #2 WRITE "$02"
 BSR OBJBYT
 LDX #OBJADR GET ADDR OF OBJ BLOCK
 LDAB 2,X
 INCB
 INCB
OBJRC2 LDAA 0,X OUT DATA BYTE
 BSR OBJBYT
 INX
 DECB
 BPL OBJRC2 BRA IF NOT DONE
 RTS
 END
